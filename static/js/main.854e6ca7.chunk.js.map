{"version":3,"sources":["store/actions/actionTypes.js","store/reducers/todos.js","store/reducers/errors.js","utils/API.js","store/sagas/todosSagas.js","store/sagas/index.js","store/configureStore.js","store/actions/todos.js","components/TodoList/TodoListItem.js","components/TodoList/TodoList.js","components/TodoList/TodoListAddNew.js","containers/App.js","components/TodoList/TodoListDetails.js","router/AppRouter.js","index.js"],"names":["FETCH_TODOS_START","FETCH_TODOS_SUCCEEDED","FETCH_TODOS_FAILED","ADD_TODO_START","ADD_TODO_SUCCEEDED","ADD_TODO_FAILED","EDIT_TODO_START","EDIT_TODO_SUCCEEDED","EDIT_TODO_FAILED","REMOVE_TODO_START","REMOVE_TODO_SUCCEEDED","REMOVE_TODO_FAILED","COMPLETE_TODO_START","COMPLETE_TODO_SUCCEEDED","COMPLETE_TODO_FAILED","initialState","todos","loaded","state","action","type","actions","REMOVE_TODO","filter","id","EDIT_TODOS","map","todo","updates","message","fetch","title","postHeaders","Headers","append","method","headers","body","JSON","stringify","patchHeaders","fetchTodosSaga","addNewTodoSaga","editTodoSaga","removeTodoSaga","completeTodoSaga","call","API","response","json","put","watchTodos","takeEvery","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","sagaMiddleware","createSagaMiddleware","fetchTodos","removeTodo","completeTodo","connect","dispatch","withStyles","theme","listItemCompleted","textDecoration","withRouter","classes","history","dense","button","onClick","push","className","ListItem","completed","primary","variant","color","size","disabled","tabIndex","Link","to","pathname","style","margin","listRoot","flexGrow","width","maxWidth","backgroundColor","palette","background","paper","container","justify","TodoListAddNew","description","handleOnChange","event","target","name","value","setState","handleSubmitTodo","length","console","log","props","addTodo","item","xs","this","addNewRoot","alignItems","spacing","onChange","Component","unit","padding","root","height","control","TodoListDetails","error","handleBack","handleOnCompleted","handleCancel","initialTodo","handleSave","editTodo","handleRemove","detailsRoot","detailsBackButton","detailsButtonText","label","detailsInput","multiline","detailsDescription","detailsButtons","currentTodo","find","parseInt","match","params","marginRight","marginBottom","fontSize","createHistory","AppRouter","Switch","Route","exact","path","component","App","store","createStore","combineReducers","todosReducer","errorsReducer","applyMiddleware","run","configureStore","Todo","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.854e6ca7.chunk.js","sourcesContent":["export const FETCH_TODOS_START = \"FETCH_TODOS_START\";\r\nexport const FETCH_TODOS_SUCCEEDED = \"FETCH_TODOS_SUCCEEDED\";\r\nexport const FETCH_TODOS_FAILED = \"FETCH_TODOS_FAILED\";\r\n\r\nexport const ADD_TODO_START = \"ADD_TODO_START\";\r\nexport const ADD_TODO_SUCCEEDED = \"ADD_TODO_SUCCEEDED\";\r\nexport const ADD_TODO_FAILED = \"ADD_TODO_FAILED\";\r\n\r\nexport const EDIT_TODO_START = \"EDIT_TODO_START\";\r\nexport const EDIT_TODO_SUCCEEDED = \"EDIT_TODO_SUCCEEDED\";\r\nexport const EDIT_TODO_FAILED = \"EDIT_TODO_FAILED\";\r\n\r\nexport const REMOVE_TODO_START = \"REMOVE_TODO_START\";\r\nexport const REMOVE_TODO_SUCCEEDED = \"REMOVE_TODO_SUCCEEDED\";\r\nexport const REMOVE_TODO_FAILED = \"REMOVE_TODO_FAILED\";\r\n\r\nexport const COMPLETE_TODO_START = \"COMPLETE_TODO_START\";\r\nexport const COMPLETE_TODO_SUCCEEDED = \"COMPLETE_TODO_SUCCEEDED\";\r\nexport const COMPLETE_TODO_FAILED = \"COMPLETE_TODO_FAILED\";\r\n\r\nexport default {\r\n\tFETCH_TODOS_START,\r\n\tFETCH_TODOS_SUCCEEDED,\r\n\tFETCH_TODOS_FAILED,\r\n\tADD_TODO_START,\r\n\tADD_TODO_SUCCEEDED,\r\n\tADD_TODO_FAILED,\r\n\tEDIT_TODO_START,\r\n\tEDIT_TODO_SUCCEEDED,\r\n\tEDIT_TODO_FAILED,\r\n\tREMOVE_TODO_START,\r\n\tREMOVE_TODO_SUCCEEDED,\r\n\tREMOVE_TODO_FAILED,\r\n\tCOMPLETE_TODO_START,\r\n\tCOMPLETE_TODO_SUCCEEDED,\r\n\tCOMPLETE_TODO_FAILED,\r\n};","import actions from '../actions/actionTypes';\r\n\r\nlet initialState = {\r\n\ttodos: [],\r\n\tloaded: false,\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n\tswitch(action.type){\r\n\t\tcase actions.FETCH_TODOS_SUCCEEDED:\r\n\t\t\treturn {\r\n\t\t\t\tloaded: true,\r\n\t\t\t\ttodos: action.todos\r\n\t\t\t};\r\n\t\tcase actions.REMOVE_TODO:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttodos: state.todos.filter(({id}) => id !== action.id)\r\n\t\t\t}\r\n\t\tcase actions.EDIT_TODOS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttodos: state.map((todo) => {\r\n\t\t\t\t\tif(todo.id === action.id){\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t...todo,\r\n\t\t\t\t\t\t\t...action.updates\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn todo;\r\n\t\t\t\t})\t\t\r\n\t\t\t};\r\n\t\tdefault: \r\n\t\t\treturn state;\r\n\t}\r\n}","import actions from '../actions/actionTypes';\r\n\r\nexport default (state = {}, action) => {\r\n\tswitch(action.type){\r\n\t\tcase actions.FETCH_TODOS_FAILED:\r\n\t\t\treturn { message: actions.message };\r\n\t\tcase actions.ADD_TODO_FAILED: \r\n\t\t\treturn { message: actions.message };\r\n\t\tcase actions.COMPLETE_TODO_FAILED:\r\n\t\t\treturn { message: actions.message };\r\n\t\tcase actions.EDIT_TODO_FAILED: \r\n\t\t\treturn { message: actions.message };\r\n\t\tcase actions.REMOVE_TODO_FAILED:\r\n\t\t\treturn { message: actions.message };\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}","const fetchTodos = () => {\r\n\treturn fetch(`https://practiceapi.devmountain.com/api/tasks`);\t\r\n}\r\nconst addNewTodo = ({title}) => {\r\n\tconst postHeaders = new Headers();\r\n\tpostHeaders.append('Content-Type', 'application/json');\r\n\treturn fetch(`https://practiceapi.devmountain.com/api/tasks`, {\r\n\t\tmethod: \"post\",\r\n\t\theaders: postHeaders,\r\n\t\tbody: JSON.stringify( { title: title } )\r\n\t});\r\n}\r\n\r\nconst editTodo = (id, updates) => {\r\n\tconst patchHeaders = new Headers();\r\n\tpatchHeaders.append('Content-Type', 'application/json');\r\n\tpatchHeaders.append('Access-Control-Allow-Origin', '*');\r\n\treturn fetch(`https://practiceapi.devmountain.com/api/tasks/${id}`, {\r\n\t\tmethod: \"PATCH\",\r\n\t\theaders: patchHeaders,\r\n\t\tbody: JSON.stringify( updates )\r\n\t});\r\n}\r\n\r\nconst deleteTodo = (id) => {\r\n\treturn fetch(`https://practiceapi.devmountain.com/api/tasks/${id}`, {\r\n\t\tmethod: \"delete\",\r\n\t});\r\n}\r\n\r\nconst completeTodo = (id) => {\r\n\treturn fetch(`https://practiceapi.devmountain.com/api/tasks/${id}`, {\r\n\t\tmethod: \"put\"\r\n\t});\r\n}\r\n\r\nexport default {\r\n\tfetchTodos: fetchTodos,\r\n\taddNewTodo: addNewTodo,\r\n\teditTodo: editTodo,\r\n\tdeleteTodo: deleteTodo,\r\n\tcompleteTodo: completeTodo\r\n};","import { call, put } from 'redux-saga/effects';\r\nimport actions from '../actions/actionTypes';\r\nimport API from '../../utils/API';\r\n\r\nexport function* fetchTodosSaga(action) {\r\n\ttry {\r\n\t\tconst response = yield call(API.fetchTodos);\r\n\t\tconst todos = yield response.json();\r\n\t\tyield put({ type: actions.FETCH_TODOS_SUCCEEDED, todos: todos });\r\n\t} catch (error) {\r\n\t\tyield put({ type: actions.FETCH_TODOS_FAILED, message: error.message});\r\n\t}\r\n};\r\n\r\nexport function* addNewTodoSaga(action) {\r\n\ttry {\r\n\t\tconst response = yield API.addNewTodo(action.todo);\r\n\t\tconst todos = yield response.json();\r\n\t\tyield put({ type: actions.ADD_TODO_SUCCEEDED });\r\n\t\tyield put({ type: actions.FETCH_TODOS_SUCCEEDED, todos: todos });\r\n\t} catch (error) {\r\n\t\tyield put({ type: actions.ADD_TODO_FAILED, message: error.message });\r\n\t}\r\n};\r\n\r\nexport function* editTodoSaga(action) {\r\n\ttry {\r\n\t\tconst response = yield API.editTodo(action.id, action.updates);\r\n\t\tconst todos = yield response.json();\r\n\t\tyield put({ type: actions.EDIT_TODO_SUCCEEDED });\r\n\t\tyield put({ type: actions.FETCH_TODOS_SUCCEEDED, todos: todos });\r\n\t} catch (error) {\r\n\t\tyield put({ type: actions.EDIT_TODO_FAILED, message: error.message });\r\n\t}\r\n}\r\n\r\nexport function* removeTodoSaga(action) {\r\n\ttry {\r\n\t\tconst response = yield API.deleteTodo(action.id)\r\n\t\tconst todos = yield response.json();\r\n\t\tyield put({ type: actions.REMOVE_TODO_SUCCEEDED });\r\n\t\tyield put({ type: actions.FETCH_TODOS_SUCCEEDED, todos: todos });\r\n\t} catch (error) {\r\n\t\tyield put({ type: actions.REMOVE_TODO_FAILED, message: error.message });\r\n\t}\r\n};\r\n\r\nexport function* completeTodoSaga(action) {\r\n\ttry {\r\n\t\tconst response = yield API.completeTodo(action.id)\r\n\t\tconst todos = yield response.json();\r\n\t\tyield put({ type: actions.COMPLETE_TODO_SUCCEEDED });\r\n\t\tyield put({ type: actions.FETCH_TODOS_SUCCEEDED, todos: todos });\r\n\t} catch (error) {\r\n\t\tyield put({ type: actions.COMPLETE_TODO_FAILED, message: error.message });\r\n\t}\r\n};\r\n\r\n","import { takeEvery } from 'redux-saga/effects';\r\nimport { fetchTodosSaga, addNewTodoSaga, editTodoSaga, removeTodoSaga, completeTodoSaga } from './todosSagas';\r\nimport actions from '../actions/actionTypes';\r\n\r\nexport function* watchTodos() {\r\n\tyield takeEvery(actions.FETCH_TODOS_START, fetchTodosSaga);\r\n\tyield takeEvery(actions.ADD_TODO_START, addNewTodoSaga);\r\n\tyield takeEvery(actions.EDIT_TODO_START, editTodoSaga);\r\n\tyield takeEvery(actions.REMOVE_TODO_START, removeTodoSaga);\r\n\tyield takeEvery(actions.COMPLETE_TODO_START, completeTodoSaga);\r\n}","import { createStore, combineReducers, compose, applyMiddleware } from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport todosReducer from './reducers/todos';\r\nimport errorsReducer from './reducers/errors';\r\nimport { watchTodos } from './sagas/index';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nexport default () => {\r\n\tconst store = createStore(\r\n\t\tcombineReducers({\r\n\t\t\ttodos: todosReducer,\r\n\t\t\terror: errorsReducer\r\n\t\t})\r\n\t\t, composeEnhancers(applyMiddleware(sagaMiddleware)) \r\n\t);\r\n\tsagaMiddleware.run(watchTodos);\r\n\treturn store;\r\n}\r\n\r\n","import actions from './actionTypes';\r\n\r\nexport const fetchTodos = () => ({\r\n\ttype: actions.FETCH_TODOS_START\r\n})\r\n\r\nexport const addTodo = (todo) => ({\r\n\ttype: actions.ADD_TODO_START,\r\n\ttodo\r\n});\r\n\r\nexport const removeTodo = (id) => ({\r\n\ttype: actions.REMOVE_TODO_START,\r\n\tid\r\n});\r\n\r\nexport const completeTodo = (id) => ({\r\n\ttype: actions.COMPLETE_TODO_START,\r\n\tid\r\n});\r\n\r\nexport const editTodo = (id, updates) => ({\r\n\ttype: actions.EDIT_TODO_START,\r\n\tid,\r\n\tupdates\r\n});\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemSecondaryAction,\r\n  IconButton,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport { Close } from \"@material-ui/icons\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { connect } from \"react-redux\";\r\nimport { removeTodo, completeTodo } from \"../../store/actions/todos\";\r\nimport { withRouter, Link } from \"react-router-dom\";\r\n\r\nconst styles = (theme) => ({\r\n  listItemCompleted: {\r\n    textDecoration: \"line-through\",\r\n  },\r\n});\r\n\r\nexport const TodoListItem = ({\r\n  todo,\r\n  classes,\r\n  removeTodo,\r\n  completeTodo,\r\n  history,\r\n}) => (\r\n  <ListItem\r\n    key={todo.id}\r\n    dense\r\n    button\r\n    onClick={() => {\r\n      history.push(`/edit/${todo.id}`);\r\n    }}\r\n    className={classes.ListItem}\r\n  >\r\n    <ListItemText\r\n      className={todo.completed ? classes.listItemCompleted : null}\r\n      primary={` ${todo.title}`}\r\n    />\r\n    <ListItemSecondaryAction>\r\n      <Button\r\n        variant=\"raised\"\r\n        color=\"default\"\r\n        size=\"small\"\r\n        disabled={todo.completed}\r\n        tabIndex={-1}\r\n        onClick={() => completeTodo(todo.id)}\r\n      >\r\n        Completed\r\n      </Button>\r\n      <Link\r\n        to={{\r\n          pathname: `/edit/${todo.id}`,\r\n        }}\r\n\t\tstyle={{margin: \"0px 15px\"}}\r\n      >\r\n        <EditIcon  />\r\n      </Link>\r\n      <IconButton onClick={() => removeTodo(todo.id)}>\r\n        <Close />\r\n      </IconButton>\r\n    </ListItemSecondaryAction>\r\n  </ListItem>\r\n);\r\n\r\nTodoListItem.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  removeTodo: (id) => dispatch(removeTodo(id)),\r\n  completeTodo: (id) => dispatch(completeTodo(id)),\r\n});\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(withStyles(styles)(withRouter(TodoListItem)));\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n\tGrid, \r\n\tList, \r\n } from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport TodoListItem from './TodoListItem';\r\nimport { connect } from 'react-redux';\r\n\r\nconst styles = theme => ({\r\n\tlistRoot:{\r\n\t\tflexGrow: 1,\r\n\t\twidth: '100%',\r\n\t\tmaxWidth: 360,\r\n\t\tbackgroundColor: theme.palette.background.paper,\r\n\t}\r\n});\r\n\r\nexport const TodoList = ({classes, todos}) => (\r\n\t<Grid container  justify=\"center\">\r\n\t\t<List className={classes.listRoot} >\r\n\t\t\t{todos.map(todo => \r\n\t\t\t\t<TodoListItem key={todo.id} todo={todo}/>)}\r\n\t\t</List>\r\n\t</Grid>\r\n);\r\n\r\nTodoList.propTypes = {\r\n\tclasses: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n\ttodos: state.todos.todos\r\n});\r\n\r\nexport default connect(mapStateToProps, null)(withStyles(styles)(TodoList));\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Grid, Button,  Paper, TextField, Typography } from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux';\r\nimport { addTodo } from '../../store/actions/todos';\r\n\r\nconst styles = theme => ({\r\n\taddNewRoot: {\r\n\t\tflexGrow: 1,\r\n\t\twidth: '100%',\r\n\t\tmaxWidth: 360,\r\n\t\tmargin: theme.spacing.unit * 2\r\n\t},\r\n\tpaper: {\r\n\t\tpadding: theme.spacing.unit * 2\r\n\t}\r\n});\r\n\r\nexport class TodoListAddNew extends Component {\r\n\tstate = {\r\n\t\ttitle: \"\",\r\n\t\tdescription: \"\",\r\n\t\tcompleted: false\r\n\t}\r\n\r\n\thandleOnChange = (event) => {\r\n\t\tconst { name, value } = event.target;\r\n\t\tthis.setState({ [name]: value });\r\n\t}\r\n\r\n\thandleSubmitTodo = () => {\r\n\t\tif(this.state.title === \"\" || this.state.title.length < 3){\r\n\t\t\tconsole.log(\"Title is required for the todo\");\r\n\t\t} else {\r\n\t\t\tthis.props.addTodo(this.state);\r\n\t\t\tthis.setState({title: \"\"});\r\n\t\t}\r\n\t}\r\n\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t<Grid container justify=\"center\" >\r\n\t\t\t\t<Grid item xs={12} className={this.props.classes.addNewRoot}>\r\n\t\t\t\t\t<Paper className={this.props.classes.paper}>\r\n\t\t\t\t\t\t<Grid container alignItems=\"center\" spacing={16}>\r\n\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t<Typography variant=\"display1\">\r\n\t\t\t\t\t\t\t\t\tTO-DO\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t<TextField \r\n\t\t\t\t\t\t\t\t\tname=\"title\"\r\n\t\t\t\t\t\t\t\t\tvalue={this.state.title}\r\n\t\t\t\t\t\t\t\t\tmargin=\"normal\"\r\n\t\t\t\t\t\t\t\t\tonChange={this.handleOnChange}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t<Button \r\n\t\t\t\t\t\t\t\t\tcolor=\"primary\" \r\n\t\t\t\t\t\t\t\t\tvariant=\"raised\"\r\n\t\t\t\t\t\t\t\t\tonClick={this.handleSubmitTodo}\r\n\t\t\t\t\t\t\t\t>Add Todo</Button>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Paper>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nTodoListAddNew.propTypes = {\r\n\tclasses: PropTypes.object.isRequired\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n\taddTodo: (todo) => dispatch(addTodo(todo))\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(withStyles(styles)(TodoListAddNew));","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport TodoList from \"../components/TodoList/TodoList\";\r\nimport TodoListAddNew from \"../components/TodoList/TodoListAddNew.js\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchTodos } from \"../store/actions/todos\";\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: \"#eee\",\r\n    height: \"100vh\",\r\n  },\r\n\r\n  control: {\r\n    padding: theme.spacing.unit * 2,\r\n  },\r\n  paper: {\r\n    height: \"100px\",\r\n    width: \"200px\",\r\n    padding: theme.spacing.unit * 3,\r\n  },\r\n});\r\n\r\nconst App = ({ classes }) => {\r\n  return (\r\n    <Grid container className={classes.root} spacing={16}>\r\n      <Grid item className={classes.control} xs={12}>\r\n        <TodoListAddNew />\r\n        <TodoList />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nApp.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  fetchTodos: () => dispatch(fetchTodos()),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(withStyles(styles)(App));\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Grid, Button, TextField, Paper, Typography } from '@material-ui/core';\r\nimport { ArrowLeft } from '@material-ui/icons'\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux';\r\nimport { fetchTodos, editTodo, completeTodo, removeTodo } from '../../store/actions/todos';\r\n\r\nconst styles = theme => ({\r\n\tdetailsRoot: {\r\n\t\tflexGrow: 1,\r\n\t\twidth: \"100%\",\r\n\t\tmaxWidth: 360,\r\n\t\tpadding: theme.spacing.unit * 2\r\n\t},\r\n\tdetailsInput: {\r\n\t\tmarginRight: theme.spacing.unit\r\n\t},\r\n\tdetailsDescription: {\r\n\t\twidth: \"100%\",\r\n\t\tmarginBottom: theme.spacing.unit * 2\r\n\t},\r\n\tdetailsButtons:{\r\n\t\twidth: \"100%\",\r\n\t},\r\n\tdetailsBackButton:{\r\n\t\tmarginBottom: theme.spacing.unit,\r\n\t},\r\n\tdetailsButtonText:{\r\n\t\tfontSize: \"0.8em\"\r\n\t}\r\n});\r\n\r\nexport class TodoListDetails extends Component {\r\n\r\n\tstate = {\r\n\t\ttitle: \"\",\r\n\t\tdescription: \"\",\r\n\t\terror: \"\"\r\n\t}\r\n\t\r\n\thandleBack = () => {\r\n\t\tthis.props.history.push(\"/\");\r\n\t}\r\n\r\n\thandleOnChange = (event) => {\r\n\t\tconst { name, value } = event.target;\r\n\t\tthis.setState({ [name]: value });\r\n\t\tthis.props.todo[name] = value;\r\n\t}\r\n\t\r\n\thandleOnCompleted = () => {\r\n\t\tthis.props.completeTodo(this.props.todo.id);\r\n\t}\r\n\r\n\thandleCancel = () => {\r\n\t\tconst { todo, initialTodo } = this.props;\r\n\t\tthis.setState({ ...this.props.initialTodo });\r\n\t\ttodo.title = initialTodo.title;\r\n\t\ttodo.description = initialTodo.description;\r\n\t}\r\n\r\n\thandleSave = () => {\r\n\t\tconst { title, description, completed, id } = this.props.todo;\r\n\t\tlet updates = {\r\n\t\t\ttitle,\r\n\t\t\tdescription,\r\n\t\t\tcompleted\r\n\t\t};\r\n\r\n\t\tif(updates.title === \"\" || updates.title.length < 1){\r\n\t\t\treturn this.setState({ error: \"Title cannot be empty!\"});\r\n\t\t}\r\n\t\tthis.props.editTodo(id, updates);\r\n\t\tthis.props.history.push(\"/\");\r\n\t}\r\n\r\n\thandleRemove = () => {\r\n\t\tthis.props.removeTodo(this.props.todo.id)\r\n\t\tthis.props.history.push(\"/\");\r\n\t}\r\n\t\r\n\trender(){\r\n\t\tconst { todo, classes, loaded } = this.props;\r\n\t\treturn(\r\n\t\t\t\tloaded ? \r\n\t\t\t\t<Grid container justify=\"center\" >\r\n\t\t\t\t\t<Grid item xs={12}className={classes.detailsRoot}>\r\n\t\t\t\t\t\t<Paper>\r\n\t\t\t\t\t\t\t<Grid container className={classes.detailsRoot} alignItems=\"center\">\r\n\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t<Button variant=\"flat\" color=\"default\" className={classes.detailsBackButton} size=\"medium\" onClick={this.handleBack}>\r\n\t\t\t\t\t\t\t\t\t\t<ArrowLeft /> \r\n\t\t\t\t\t\t\t\t\t\t<Typography variant=\"button\" className={classes.detailsButtonText} >Back to List</Typography>\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Grid item xs={6}> \r\n\t\t\t\t\t\t\t\t\t<TextField \r\n\t\t\t\t\t\t\t\t\t\tlabel=\"Title\"\r\n\t\t\t\t\t\t\t\t\t\tname=\"title\"\r\n\t\t\t\t\t\t\t\t\t\tvalue={todo.title }\r\n\t\t\t\t\t\t\t\t\t\tonChange={this.handleOnChange}\r\n\t\t\t\t\t\t\t\t\t\tclassName={classes.detailsInput}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Grid item xs={6}> \r\n\t\t\t\t\t\t\t\t\t<Button \r\n\t\t\t\t\t\t\t\t\t\tvariant=\"raised\" \r\n\t\t\t\t\t\t\t\t\t\tcolor=\"default\"\r\n\t\t\t\t\t\t\t\t\t\tsize=\"medium\"\r\n\t\t\t\t\t\t\t\t\t\tdisabled={todo.completed}\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => this.handleOnCompleted(todo.id)}\r\n\t\t\t\t\t\t\t\t\t>Completed</Button>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t<TextField \r\n\t\t\t\t\t\t\t\t\t\tlabel=\"Description\"\r\n\t\t\t\t\t\t\t\t\t\tmultiline\r\n\t\t\t\t\t\t\t\t\t\tname=\"description\"\r\n\t\t\t\t\t\t\t\t\t\tvalue={todo.description }\r\n\t\t\t\t\t\t\t\t\t\tonChange={this.handleOnChange}\r\n\t\t\t\t\t\t\t\t\t\tclassName={classes.detailsDescription}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t<Grid container justify=\"space-evenly\" spacing={8}>\r\n\t\t\t\t\t\t\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Button \r\n\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"raised\" \r\n\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={this.handleSave}\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.detailsButtons}\r\n\t\t\t\t\t\t\t\t\t\t\t>Save</Button>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Button \r\n\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"raised\" \r\n\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"default\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={this.handleCancel}\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.detailsButtons}\r\n\t\t\t\t\t\t\t\t\t\t\t>Cancel</Button>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Button \r\n\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"raised\" \r\n\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"secondary\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={this.handleRemove}\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.detailsButtons}\r\n\t\t\t\t\t\t\t\t\t\t\t>Remove</Button>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Paper>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid> : <p>loading...</p>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nTodoListDetails.propTypes = {\r\n\tclasses: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state, props) => {\r\n\tif(state.todos.loaded){\r\n\t\tconst currentTodo = state.todos.todos.find((todo) => todo.id === parseInt(props.match.params.id, 10));\r\n\t\tconst { title, description, completed } = currentTodo;\r\n\t\tconst initialTodo = {\r\n\t\t\ttitle: title,\r\n\t\t\tdescription: description,\r\n\t\t\tcompleted: completed\r\n\t\t};\r\n\t\treturn { \r\n\t\t\ttodo: currentTodo,\r\n\t\t\tinitialTodo: initialTodo,\r\n\t\t\tloaded: state.todos.loaded \r\n\t\t}\r\n\t}\r\n\r\n\treturn { \r\n\t\ttodo: {},\r\n\t\tinitialTodo: {},\r\n\t\tloaded: state.todos.loaded \r\n\t}\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n\tfetchTodos: () => dispatch(fetchTodos()),\r\n\teditTodo: (id, updates) => dispatch(editTodo(id, updates)),\r\n\tcompleteTodo: (id) => dispatch(completeTodo(id)),\r\n\tremoveTodo: (id) => dispatch(removeTodo(id))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(TodoListDetails));","import React from 'react';\r\nimport { HashRouter as Router , Route, Switch, Redirect } from 'react-router-dom';\r\nimport createHistory from 'history/createBrowserHistory';\r\nimport App from '../containers/App';\r\nimport TodoListDetails from '../components/TodoList/TodoListDetails';\r\n\r\nexport const history = createHistory();\r\n\r\nconst AppRouter = () => (\r\n\t<Router history={history}>\r\n\t\t<Switch>\r\n\t\t\t<Route exact path=\"/\" component={App} />\r\n\t\t\t<Route path=\"/edit/:id\" component={TodoListDetails} />\r\n\t\t\t{/* <Redirect path=\"*\" to=\"/\"/> */}\r\n\t\t</Switch>\r\n\t</Router>\r\n);\r\n\r\nexport default AppRouter;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport configureStore from \"./store/configureStore\";\r\nimport AppRouter from \"./router/AppRouter\";\r\n\r\nconst store = configureStore();\r\n\r\nconst Todo = () => {\r\n  return (\r\n    <Provider store={store}>\r\n      <AppRouter />\r\n    </Provider>\r\n  );\r\n};\r\n\r\nReactDOM.render(<Todo />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}